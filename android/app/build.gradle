plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
    //id 'com.google.gms.google-services' // 이 줄을 추가하세요
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.credentials:credentials:1.2.2"
    implementation "androidx.credentials:credentials-play-services-auth:1.2.2"
    implementation "com.google.android.libraries.identity.googleid:googleid:1.1.1"
    // 다른 의존성들...
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace = 'com.example.madcamp_week2'
    compileSdk = 34
    ndkVersion = '21.3.6528147'

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = 'com.example.madcamp_week2'
        minSdk = 21
        targetSdk = 34
        versionCode = 1
        versionName = '1.0'
    }

    signingConfigs {
        release {
            keyAlias 'upload'
            keyPassword 'madcamp2'
            storeFile file(System.getenv("USERPROFILE") + "/upload-keystore.jks")
            storePassword 'madcamp2'
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = '../..'
}

// 이 줄을 맨 아래로 이동

//apply plugin: 'com.google.gms.google-services'
